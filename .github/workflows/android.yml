name: Android Build (Kotlin-first logs)

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android packages
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew || true

      # 1) Compile Kotlin first to surface MainActivity errors
      - name: Compile Kotlin (Release)
        continue-on-error: true
        run: |
          ./gradlew :app:compileReleaseKotlin --stacktrace --info --no-daemon --console=plain -Dkotlin.colors.enabled=false | tee kotlin-compile.log

      # 2) Full build (assemble) with full log
      - name: Build APK (Release)
        continue-on-error: true
        run: |
          ./gradlew clean assembleRelease --stacktrace --info --no-daemon --console=plain | tee gradle-build.log

      # 3) Collect logs/reports/outputs
      - name: Prepare artifacts
        if: always()
        run: |
          mkdir -p artifacts
          # top-level logs
          cp -f kotlin-compile.log artifacts/ 2>/dev/null || true
          cp -f gradle-build.log artifacts/ 2>/dev/null || true
          # reports and logs inside modules
          find . -type d -path "*/build/reports" -print0 | xargs -0 -I{} bash -lc 'mkdir -p artifacts/{} && cp -R {}/* artifacts/{} 2>/dev/null || true'
          # manifest merger reports
          find . -type f -name "manifest-merger-*.txt" -print0 | xargs -0 -I{} bash -lc 'mkdir -p artifacts/$(dirname {}) && cp -f {} artifacts/$(dirname {})/ 2>/dev/null || true'
          # intermediates merged manifests
          find . -type d -path "*/build/intermediates/merged_*" -print0 | xargs -0 -I{} bash -lc 'mkdir -p artifacts/{} && cp -R {}/* artifacts/{} 2>/dev/null || true'
          # keep outputs for inspection (may include APK/AAB); the dedicated APK artifact below will upload ONLY APK files
          find . -type d -path "*/build/outputs" -print0 | xargs -0 -I{} bash -lc 'mkdir -p artifacts/{} && cp -R {}/* artifacts/{} 2>/dev/null || true'

      # 4) Upload combined logs/reports artifact
      - name: Upload build logs and reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-and-reports
          path: artifacts
          if-no-files-found: warn

      # 5) Upload ONLY APKs (no AAB)
      - name: Upload APKs (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-apk-outputs
          path: |
            app/build/outputs/**/*.apk
          if-no-files-found: ignore
